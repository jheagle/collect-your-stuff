"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LinkedList=void 0,require("core-js/modules/es.symbol.iterator.js"),require("core-js/modules/es.array.iterator.js"),require("core-js/modules/es.object.to-string.js"),require("core-js/modules/es.string.iterator.js"),require("core-js/modules/web.dom-collections.iterator.js"),require("core-js/modules/es.symbol.js"),require("core-js/modules/es.symbol.description.js");const _Linker=require("./Linker");function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(let r=0;r<t.length;r++){const n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}const LinkedList=function(){function e(){const t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_Linker.Linker,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;_classCallCheck(this,e),this.LinkerClass=t,this.ListClass=r,this.innerList=new this.LinkerClass}return _createClass(e,[{key:"first",get:function(){let e=this.innerList,t=e.prev;for(;null!==t;)e=t,t=e.prev;return e}},{key:"last",get:function(){let e=this.innerList,t=e.next;for(;null!==t;)e=t,t=e.next;return e}},{key:"length",get:function(){let e=this.first,t=0;for(;null!==e;)++t,e=e.next;return t}},{key:"append",value:function(e){return this.last.after(e),this.first}},{key:"prepend",value:function(e){return this.first.before(e)}},{key:"item",value:function(e){if(e>=0){let t=this.first,r=-1;for(;++r<e&&null!==t;)t=t.next;return r===e?t:null}let t=this.last,r=this.length;const n=this.length+e;if(n<0)return null;for(;--r>n&&null!==t;)t=t.prev;return r===n?t:null}},{key:"forEach",value:function(e){let t=this.first;for(;null!==t;)e(t),t=t.next}},{key:Symbol.iterator,value:function(){let e=this.first;return{next:function(){const t={value:e,done:!e};return e=e?e.next:null,t}}}}]),e}();exports.LinkedList=LinkedList,LinkedList.fromArray=function(){const e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_Linker.Linker,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:LinkedList,n=new r(t);return n.innerList=n.LinkerClass.fromArray(e,t),n};