"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _Linker=_interopRequireDefault(require("./Linker")),_Arrayable=_interopRequireDefault(require("../arrayable/Arrayable"));function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}class LinkedList extends _Arrayable.default{constructor(){super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:LinkedList)}initialize(t){return this.initialized?(console.warn("Attempt to initialize LinkedList which is not empty."),this):(this.initialized=!0,this.innerList=t,this)}get first(){return this.innerList}get last(){let t=this.innerList,e=t.next;for(;null!==e;)t=e,e=t.next;return t}get length(){let t=this.first,e=0;for(;null!==t;)++e,t=t.next;return e}insertAfter(t,e){return(e=t.classType.make(e)).next=t.next,t.next=e,this}insertBefore(t,e){e=t.classType.make(e);let r=null,i=this.first;for(;i!==t;)r=i,i=i.next;return e.next=t,r&&(r.next=e),t===this.first&&(this.innerList=e),this}append(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.last;return this.insertAfter(e,t),this}prepend(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.first;return this.insertBefore(e,t),this}remove(t){let e=null,r=this.first;for(;r!==t;)e=r,r=r.next;return e&&(e.next=t.next),t===this.first&&(this.innerList=t.next),t}item(t){if(t>=0){let e=this.first,r=-1;for(;++r<t&&null!==e;)e=e.next;return r===t?e:null}let e=this.first,r=0;const i=this.length+t;if(i<0)return null;for(;r<i&&null!==e;)e=e.next,++r;return r===i?e:null}forEach(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this,r=0,i=this.first;for(;null!==i;)t(i,r,e),i=i.next,++r;return e}[Symbol.iterator](){let t=this.first;return{next:()=>{const e={value:t,done:!t};return t=t?t.next:null,e}}}}LinkedList.fromArray=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_Linker.default,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:LinkedList;return _Arrayable.default.fromArray(t,e,r)};var _default=exports.default=LinkedList;