"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,require("core-js/modules/web.dom-collections.iterator.js");var _Linker=_interopRequireDefault(require("./Linker")),_LinkerIterator=_interopRequireDefault(require("../../recipes/LinkerIterator")),_Arrayable=_interopRequireDefault(require("../arrayable/Arrayable"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class LinkedList{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_Linker.default;this.classType=LinkedList,this.innerList=null,this.initialized=!1,this.linkerClass=e}initialize(e){return _Arrayable.default.prototype.initialize.call(this,e)}get list(){return this.innerList}get first(){return this.innerList}get last(){let e=this.innerList;if(null===e)return null;let t=e.next;for(;null!==t;)e=t,t=e.next;return e}get length(){let e=this.first,t=0;for(;null!==e;)++t,e=e.next;return t}insertAfter(e,t){return t=this.linkerClass.make(t),null!==e&&(t.next=e.next,e.next=t),this.length||(this.innerList=t),this}insertBefore(e,t){t=this.linkerClass.make(t);let r=null,i=this.first;for(;i!==e;)r=i,i=i.next;return t.next=e,r&&(r.next=t),e!==this.first&&null!==e||(this.innerList=t),this}append(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.last;return this.insertAfter(t,e)}prepend(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.first;return this.insertBefore(t,e)}remove(e){let t=null,r=this.first;for(;r!==e;)t=r,r=r.next;return t&&(t.next=e.next),e===this.first&&null!==e&&(this.innerList=e.next),e}item(e){if(e>=0){let t=this.first,r=-1;for(;++r<e&&null!==t;)t=t.next;return r===e?t:null}let t=this.first,r=0;const i=this.length+e;if(i<0)return null;for(;r<i&&null!==t;)t=t.next,++r;return r===i?t:null}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this,r=0,i=t.first;for(;null!==i;)e(i,r,t),i=i.next,++r;return t}[Symbol.iterator](){return new _LinkerIterator.default(this.first)}}LinkedList.fromArray=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_Linker.default;return new(arguments.length>2&&void 0!==arguments[2]?arguments[2]:LinkedList)(t).initialize(t.fromArray(e).head)};var _default=exports.default=LinkedList;